---
- name: Debian based system
  ansible.builtin.debug:
    msg: Using apt to install packages

- name: PRE_TASK Wait for cloud-init / user-data to finish
  ansible.builtin.command: cloud-init status --wait
  changed_when: false

- name: Populate service facts
  ansible.builtin.service_facts:
- name: Wait till Apt_Mirror de.NBI Bielefeld Service is done
  ansible.builtin.service_facts:
  until: services['de.NBI_Bielefeld_environment.service'].state == 'stopped'
  retries: 35
  delay: 10
  when: services['de.NBI_Bielefeld_environment.service'] is defined

- name: PRE_TASK Disable unattended upgrades
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/10periodic
    regexp: ^APT::Periodic::Unattended-Upgrade
    line: APT::Periodic::Unattended-Upgrade "0";
    create: true
- name: PRE_TASK Stop apt-daily.* systemd services
  ansible.builtin.service:
    name: "{{ common_apt_service }}"
    state: stopped
  with_items:
    - unattended-upgrades
    - apt-daily
    - apt-daily.timer
    - apt-daily-upgrade
    - apt-daily-upgrade.timer
  loop_control:
    loop_var: common_apt_service


- name: PRE_TASK   Wait for automatic system updates 1
  ansible.builtin.shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;
  changed_when: false

- name: PRE_TASK  Wait for automatic system updates 2
  ansible.builtin.shell: while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 1; done;
  changed_when: false

- name: PRE_TASK   Update apt cache
  become: true
  ansible.builtin.apt:
    upgrade: true
    update_cache: true
    autoremove: true
    autoclean: true

- name: Update
  ansible.builtin.apt:
    update_cache: "yes"
    upgrade: "yes"

- name: Import deadsnake PPA for python3.9
  ansible.builtin.apt_repository:
    repo: ppa:deadsnakes/ppa
    update_cache: true
  tags: always

- name: Install python3.9
  ansible.builtin.apt:
    state: present
    name: python3.9

- name: Install Python 3.9 and reset selection to auto
  community.general.alternatives:
    name: python
    path: /usr/bin/python3.9
    link: /usr/bin/python
    state: auto

- name: Install common packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - libffi-dev
      - libssl-dev
      - software-properties-common
      - python3.9-dev
      - python3.9-venv
      - python3-pip
      - python3-setuptools
    state: present

- name: Install OpenStack object store client
  ansible.builtin.apt:
    name: swift
    state: present
  when: mode == "openstack"

- name: Add apt.bi.denbi.de repository key
  ansible.builtin.apt_key:
    url: https://apt.bi.denbi.de/repo_key.key
    state: present

- name: Add apt.bi.denbi.de repository
  ansible.builtin.apt_repository:
    repo: deb https://apt.bi.denbi.de/repos/apt/{{ ansible_distribution_release | lower }} {{ ansible_distribution_release | lower }} main

- name: Update apt cache
  ansible.builtin.apt:
    upgrade: "yes"
    update_cache: "yes"
    cache_valid_time: 86400 # One day
