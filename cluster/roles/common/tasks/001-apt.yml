- name: Debian based system
  debug:
    msg: Using apt to install packages

- name: PRE_TASK Wait for cloud-init / user-data to finish
  ansible.builtin.command: cloud-init status --wait
  changed_when: false

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Wait till Apt_Mirror de.NBI Bielefeld Service is done
  ansible.builtin.service_facts:
  until: services['de.NBI_Bielefeld_environment.service'].state == 'stopped'
  retries: 35
  delay: 10
  when: services['de.NBI_Bielefeld_environment.service'] is defined


- name: PRE_TASK Disable unattended upgrades
  lineinfile:
        path: /etc/apt/apt.conf.d/10periodic
        regexp: "^APT::Periodic::Unattended-Upgrade"
        line: 'APT::Periodic::Unattended-Upgrade "0";'
        create: true
- name: PRE_TASK Stop apt-daily.* systemd services
  service:
        name: "{{ item }}"
        state: stopped
  with_items:
        - unattended-upgrades
        - apt-daily
        - apt-daily.timer
        - apt-daily-upgrade
        - apt-daily-upgrade.timer

- name: PRE_TASK   Wait for automatic system updates 1
  shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;

- name: PRE_TASK  Wait for automatic system updates 2
  shell: while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 1; done;

- name: PRE_TASK   Update apt cache
  become: true
  apt:
        upgrade: true
        update_cache: true
        autoremove: true
        autoclean: true


- name: Update
  apt:
    update_cache: "yes"
    upgrade: "yes"

- name: Import deadsnake PPA for python3.8
  ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        update_cache: yes
  tags: always

- name: Install python3.8
  apt:
        state: latest
        name: python3.8

- name: Install Python 3.8 and reset selection to auto
  community.general.alternatives:
    name: python
    path: /usr/bin/python3.8
    link: /usr/bin/python
    state: auto


- name: Install common packages
  apt:
    name: ["apt-transport-https","ca-certificates","curl","libffi-dev", "libssl-dev","software-properties-common","python3.8-dev","python3.9-venv","python3-pip","python3-setuptools"]
    state: "present"

- name: Install OpenStack object store client
  apt:
    name: "swift"
    state: "present"
  when: mode == "openstack"

- name: Add apt.bi.denbi.de repository key
  apt_key:
    url: 'https://apt.bi.denbi.de/repo_key.key'
    state: present

- name: Add apt.bi.denbi.de repository
  apt_repository:
    repo: 'deb https://apt.bi.denbi.de/repos/apt/{{ ansible_distribution_release | lower }} {{ ansible_distribution_release | lower }} main'

- name: Update apt cache
  apt:
    upgrade: 'yes'
    update_cache: 'yes'
    cache_valid_time: 86400 #One day
