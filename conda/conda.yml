---
- name: Install miniconda role
  include_role:
    name: andrewrothstein.miniconda
  vars:
    miniconda_parent_dir: /home/{{conda_vars.default_user}}
    miniconda_link_subdir: miniconda3

- name: Install conda-env role
  include_role:
    name: andrewrothstein.conda-env
  vars:
    conda_env_conda_dir: "{{conda_vars.CONDA_DIR}}"
    conda_env_name: "{{ conda_vars.ENV_NAME| quote }}"
    conda_env_environment: conda_env.yml
    conda_env_activate_for_login_shell: true

- name: Adjust miniconda folder rights
  become: true
  shell: chown -R {{conda_vars.default_user}}:{{conda_vars.default_user}} {{conda_vars.CONDA_DIR}}/

- name: Add bioconda channel
  become_user: "{{   conda_vars.default_user  }}"
  shell: timeout 1m bash -c 'source {{conda_vars.CONDA_DIR}}/bin/activate && conda config --add channels bioconda'
  args:
    executable: /bin/bash

- name: Add conda-forge channel
  become_user: "{{   conda_vars.default_user  }}"
  shell: timeout 1m bash -c 'source {{conda_vars.CONDA_DIR}}/bin/activate && conda config --add channels conda-forge'
  args:
    executable: /bin/bash

- name: Add anaconda channel
  become_user: "{{   conda_vars.default_user  }}"
  shell: timeout 1m bash -c 'source {{conda_vars.CONDA_DIR}}/bin/activate && conda config --add channels anaconda'
  args:
    executable: /bin/bash

- name: Init .bashrc for conda
  become_user: "{{   conda_vars.default_user  }}"
  shell: timeout 1m bash -c 'source {{ conda_vars.CONDA_DIR}}/bin/activate && conda init'
  args:
    executable: /bin/bash

- name: Create alias for environment
  become_user: "{{   conda_vars.default_user  }}"
  shell: echo $ALIAS_VARIABLE > ~/.bash_aliases
  environment:
    ALIAS_VARIABLE: alias {{ conda_vars.ENV_NAME| quote }}="conda activate {{ conda_vars.ENV_NAME| quote }}"

- name: Check for installed packages
  become_user: "{{   conda_vars.default_user  }}"
  shell: timeout 1m bash -c 'source {{ conda_vars.CONDA_DIR}}//bin/activate && conda activate {{ conda_vars.ENV_NAME| quote }} && conda list'
  register: added_packages

- name: Install chosen packages
  become_user: "{{   conda_vars.default_user  }}"
  shell:
    timeout {{ conda_vars.TIMEOUT_LENGTH }} bash -c
    'source {{ conda_vars.CONDA_DIR}}/bin/activate && conda activate {{ conda_vars.ENV_NAME| quote }} && conda
    install --yes {{ item.key }}={{ item.value.version }}'
  args:
    executable: /bin/bash
  loop: "{{ q('dict', conda_vars.packages) }}"
  when: added_packages.stdout.find(item.key) == -1
