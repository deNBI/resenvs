- name: Wait for automatic system updates 1
  shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;

- name: Wait for automatic system updates 2
  shell: while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 1; done;

- name: Install miniconda role
  include_role:
    name: andrewrothstein.miniconda
  vars:
    miniconda_parent_dir: "/home/{{conda_vars.DEFAULT_USER}}"
    miniconda_link_subdir: "miniconda3"

- name: Install conda-env role
  include_role:
    name: andrewrothstein.conda-env
  vars:
    conda_env_conda_dir: "{{conda_vars.CONDA_DIR}}"
    conda_env_name: "{{ conda_vars.ENV_NAME| quote }}"
    conda_env_environment: conda_env.yml


- name: Init .bashrc for conda
  become_user: "{{   conda_vars.DEFAULT_USER  }}"
  shell: "timeout 1m bash -c 'source {{ conda_vars.CONDA_DIR}}/bin/activate && conda init'"
  args:
    executable: /bin/bash

- name: Check for installed packages
  become_user: "{{   conda_vars.DEFAULT_USER  }}"
  shell: "timeout 1m bash -c 'source {{ conda_vars.CONDA_DIR}}//bin/activate && conda activate {{ conda_vars.ENV_NAME| quote }} && conda list'"
  register: added_packages

- name: Install chosen packages
  become_user: "{{   conda_vars.DEFAULT_USER  }}"
  shell: "timeout {{ conda_vars.TIMEOUT_LENGTH }} bash -c 'source  {{conda_vars.CONDA_DIR}}/bin/activate && conda activate {{ conda_vars.ENV_NAME| quote }} && conda install --yes {{ item.key }}={{ item.value.version }}'"
  args:
    executable: /bin/bash
  loop: "{{ q('dict', conda_vars.packages) }}"
  when: added_packages.stdout.find(item.key) == -1
