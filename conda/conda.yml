---
- name: PRE_TASK   Update apt cache
  become: true
  ansible.builtin.apt:
        upgrade: true
        update_cache: true
        autoremove: true
        autoclean: true


- name: Pip
  ansible.builtin.apt:
        name: python3-pip
        state: latest

- name: Download Miniconda
  get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: /tmp/miniconda.sh

- name: Install Miniconda
  command: bash /tmp/miniconda.sh -b -p {{conda_vars.CONDA_DIR}}
  args:
        creates: "{{conda_vars.CONDA_DIR}}/bin/conda"

- name: Add Miniconda to PATH
  lineinfile:
        path: /etc/profile
        line: 'export PATH={{conda_vars.CONDA_DIR}}/bin:$PATH'
  become: true
  become_user: root

- name: Install conda-env role
  include_role:
        name: andrewrothstein.conda-env
  vars:
        conda_env_conda_dir: "{{conda_vars.CONDA_DIR}}"
        conda_env_name: "{{ conda_vars.ENV_NAME| quote }}"
        conda_env_environment: conda_env.yml
        conda_env_activate_for_login_shell: true

- name: Adjust miniconda folder rights
  become: true
  shell: chown -R {{conda_vars.default_user}}:{{conda_vars.default_user}} {{conda_vars.CONDA_DIR}}/

- name: Add bioconda channel
  become_user: "{{conda_vars.default_user}}"
  shell: 'timeout 1m bash -c ''source {{conda_vars.CONDA_DIR}}/bin/activate && conda config --add channels bioconda'''
  args:
        executable: /bin/bash

- name: Add conda-forge channel
  become_user: "{{conda_vars.default_user}}"
  shell: 'timeout 1m bash -c ''source {{conda_vars.CONDA_DIR}}/bin/activate && conda config --add channels conda-forge'''
  args:
        executable: /bin/bash


- name: Init .bashrc for conda
  become_user: "{{conda_vars.default_user}}"
  shell: 'timeout 1m bash -c ''source {{ conda_vars.CONDA_DIR}}/bin/activate && conda init'''
  args:
        executable: /bin/bash

- name: Create alias for environment
  become_user: "{{conda_vars.default_user}}"
  lineinfile:
        path: "/home/{{conda_vars.default_user}}/.bashrc"
        line: "alias {{conda_vars.ENV_NAME|quote}}='conda activate {{conda_vars.ENV_NAME|quote}}'"

- name: Check for installed packages
  become_user: "{{conda_vars.default_user}}"
  shell: 'source {{conda_vars.CONDA_DIR}}/bin/activate && conda activate {{conda_vars.ENV_NAME|quote}} && conda list'
  register: added_packages
  args:
        executable: /bin/bash

- name: Install chosen packages
  become_user: "{{conda_vars.default_user}}"
  shell: >
    source {{conda_vars.CONDA_DIR}}/bin/activate &&
    conda activate {{conda_vars.ENV_NAME|quote}} &&
    conda install --yes {{item.key}}={{item.value.version}}
  args:
        executable: /bin/bash
  loop: "{{ q('dict', conda_vars.packages) }}"
  when: added_packages.stdout.find(item.key) == -1
