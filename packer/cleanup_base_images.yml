---
- name: Clean up base images
  hosts: localhost
  vars:
    limit: 1
  vars_files:
    - tags.json

  tasks:
    - ansible.builtin.set_fact:
        limit: "{{ keep | int }}"
      when: keep is defined and keep | int > 0

    - name: Retrieve list of all images
      openstack.cloud.image_info:
      register: images

    - ansible.builtin.set_fact:
        ubuntu18_images: "{{ images.images | selectattr('tags', 'search', base_image_tag)
                          | selectattr('os_distro', '==', 'ubuntu')
                          | selectattr('os_version', '==', '18.04')
                          | json_query(filter)
                          | sort(attribute='created_at') }}"
      vars:
           filter: "[?properties.image_type=='image']"


    - ansible.builtin.set_fact:
        ubuntu20_images: "{{ images.images | selectattr('tags', 'search', base_image_tag)
                          | selectattr('os_distro', '==', 'ubuntu')
                          | selectattr('os_version', '==', '20.04')
                          | json_query(filter)
                          | sort(attribute='created_at') }}"
      vars:
           filter: "[?properties.image_type=='image']"

    - ansible.builtin.set_fact:
        ubuntu22_images: "{{ images.images | selectattr('tags', 'search', base_image_tag)
                          | selectattr('os_distro', '==', 'ubuntu')
                          | selectattr('os_version', '==', '22.04')
                          | json_query(filter)
                          | sort(attribute='created_at') }}"
      vars:
           filter: "[?properties.image_type=='image']"

    - name: Clean up old Ubuntu 18.04 images
      openstack.cloud.image:
        name: "{{ item.id }}"
        state: absent
      loop: "{{ ubuntu18_images }}"
      loop_control:
        index_var: index
      when:
        - ubuntu18_images | length > limit | int
        - index < ubuntu18_images | length - limit | int

    - name: Clean up old Ubuntu 20.04 images
      openstack.cloud.image:
        name: "{{ item.id }}"
        state: absent
      loop: "{{ ubuntu20_images }}"
      loop_control:
        index_var: index
      when:
        - ubuntu20_images | length > limit | int
        - index < ubuntu20_images | length - limit | int

    - name: Clean up old Ubuntu 22.04 images
      openstack.cloud.image:
        name: "{{ item.id }}"
        state: absent
      loop: "{{ ubuntu22_images }}"
      loop_control:
        index_var: index
      when:
        - ubuntu22_images | length > limit | int
        - index < ubuntu22_images | length - limit | int
