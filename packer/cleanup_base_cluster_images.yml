---
- name: Clean up base cluster images
  hosts: localhost
  vars:
    limit: 1
    os_distro: ubuntu
    os_version: 20.04
  vars_files:
    - tags.json

  tasks:
    - ansible.builtin.set_fact:
        limit: "{{ keep | int }}"
      when: keep is defined and keep | int > 0

    - name: Retrieve list of all images
      openstack.cloud.image_info:
        filters:
          os_distro: "{{os_distro}}"
          os_version: "{{os_version}}"
      register: images
    - name: All Images length
      ansible.builtin.debug:
        var: images | length
    - ansible.builtin.set_fact:
        ubuntu_master_images: "{{ images.images | selectattr('tags', 'search', base_cluster_tag)
                          | selectattr('tags', 'search', 'cluster')
                          | selectattr('tags', 'search', 'master')
                          | sort(attribute='created_at') }}"
      vars:
        filter: "[?properties.image_type=='image']"

    - name: Echo Ubuntu images length
      ansible.builtin.debug:
        var: ubuntu_master_images | length

    - name: Clean up old Ubuntu master {{ os_version }} images
      openstack.cloud.image:
        name: "{{ item.id }}"
        state: absent
      loop: "{{ ubuntu_master_images }}"
      loop_control:
        index_var: index
      when: ubuntu_master_images | length > limit | int and index >= limit | int

    - ansible.builtin.set_fact:
        ubuntu_worker_images: "{{ images.images | selectattr('tags', 'search', base_cluster_tag)
                          | selectattr('tags', 'search', 'cluster')
                          | selectattr('tags', 'search', 'worker')
                          | sort(attribute='created_at') }}"
      vars:
        filter: "[?properties.image_type=='image']"

    - name: Echo Ubuntu images length
      ansible.builtin.debug:
        var: ubuntu_worker_images | length

    - name: Clean up old Ubuntu {{ os_version }} images
      openstack.cloud.image:
        name: "{{ item.id }}"
        state: absent
      loop: "{{ ubuntu_worker_images }}"
      loop_control:
        index_var: index
      when: ubuntu_worker_images | length > limit | int and index >= limit | int
