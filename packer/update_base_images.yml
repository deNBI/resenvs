- name: Check base image update
  hosts: localhost
  vars:
    name: "Dummy"
    date: "2000-01-01"
    distro: "ubuntu"
    version: "2004"
  vars_files:
    - tags.json

  tasks:
    - name: Set Update default false
      ansible.builtin.set_fact:
        update: false

    - name: Retrieve list of all images
      openstack.cloud.image_info:
      register: images

    - name: Set Base Image Fact
      ansible.builtin.set_fact:
        base_images: "{{ images.openstack_image | selectattr('tags', 'search', base_image_tag) | json_query(filter) | sort(attribute='created_at') }}"
      vars:
        filter: "[?properties.os_distro=='{{ distro }}' && properties.os_version=='{{ version }}']"

    - name: Set Update  Fact
      ansible.builtin.set_fact:
        update: true
      when: base_images | length == 0 or ((base_images | last).created_at | to_datetime('%Y-%m-%dT%H:%M:%SZ')) < (date | to_datetime('%Y-%m-%dT%H:%M:%SZ'))

    - name: Set Date Fact
      ansible.builtin.set_fact:
        date_time: "{{ (date | to_datetime('%Y-%m-%dT%H:%M:%SZ')).date }}"
      when: update

    - name: Echo Timestamp
      run: echo "The Timestamp is  ${{ date_time  }}"
      when: update


    - name: Download new base image
      ansible.builtin.command: ~/mc cp osbielefeld/cloud-images/"{{ name }}" .
      when: update

    - name: Upload image to Openstack
      openstack.cloud.image:
        name: "{{ name + ' de.NBI (' + date_time + ')' }}"
        state: present
        filename: "{{ name }}"
        tags:
          - portalclient
          - "{{ base_image_tag }}"
          - deNBI
        properties:
          os_distro: "{{ distro }}"
          os_version: "{{ version }}"
          description: "Ubuntu is a free and open source operating system and Linux distribution based on Debian."
      when: update
