---
- name: Update Cluster image
  hosts: localhost
  vars:
    cluster_type: master
    location: bielefeld
    upload_environment: staging
  vars_files:
    - networks.json
    - tags.json

  tasks:
    - name: Set Update Fact to false
      ansible.builtin.set_fact:
        update: false

    - name: Retrieve list of all images
      openstack.cloud.image_info:
      register: images

    - name: Get Latest Master Branch Commit
      ansible.builtin.command: git rev-parse --short --verify origin/master
      register: github_hash
      changed_when: false

    - name: Set Base Images
      ansible.builtin.set_fact:
        base_images: >-
          {{
            images.images
            | selectattr('tags', 'contains', base_image_tag)
            | selectattr('os_distro', '==', os_distro)
            | selectattr('os_version', '==', os_version)
            | sort(attribute='created_at')
          }}

    - name: Set Cluster {{ cluster_type }} Images
      ansible.builtin.set_fact:
        cluster_images: >-
          {{ images.images
             | selectattr('tags', 'search', cluster_type )
             | selectattr('os_distro', '==', os_distro)
             | selectattr('os_version', '==', os_version)
             | sort(attribute='created_at')
          }}

    - name: Set Update facts
      ansible.builtin.set_fact:
        update: true
      when:
        - base_images | length > 0
        - cluster_images | length == 0
          or (
            (base_images | last).created_at | to_datetime('%Y-%m-%dT%H:%M:%SZ') >
            (cluster_images | last).created_at | to_datetime('%Y-%m-%dT%H:%M:%SZ')
          )
          or (
            (cluster_images | last).properties.github_hash | trim | default('undefined')
            != github_hash.stdout | trim
          )


    - name: Build new Cluster [{{ cluster_type }}] image - {{ os_distro }} {{ os_version }}
      ansible.builtin.command: packer build -var-file=tags.json -var 'os_distro={{ os_distro }}'
                               -var 'github_hash={{ github_hash.stdout }}' -var 'os_version={{ os_version }}'
                               -var 'network={{ vars[location + '_' + upload_environment] }}'
                               ../cluster/packer_{{ cluster_type }}.json
      when: update
      changed_when: false
