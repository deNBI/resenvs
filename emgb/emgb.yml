---

- name: Ensure python-is-python3 is installed
  become: true
  package:
    name: python-is-python3
    state: present

- name: Install Docker role
  include_role:
    name: geerlingguy.docker
  vars:
    docker_users:
      - ubuntu

- name: Install yq
  ansible.builtin.shell: |
    VERSION="v4.34.2"  # Specify the desired version of yq
    BINARY="yq_linux_amd64"  # Change this if you need a different binary
    wget "https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz" -O - |\
      tar xz && mv "${BINARY}" /usr/bin/yq
  become: true

- name: Clone EMGB Repo
  git:
    repo: "{{emgb_vars.emgb_repo}}"
    dest: "{{emgb_vars.repo_path}}"
    version: "{{emgb_vars.emgb_version}}"

- name: Create required directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  with_items:
    - "{{ emgb_vars.repo_path }}/data/"
    - "{{ emgb_vars.repo_path }}/esdata/"
    - "{{ emgb_vars.repo_path }}/blast/db/"
    - "{{ emgb_vars.repo_path }}/targetdb/db/"

- name: Run prepare-import.sh script
  ansible.builtin.command:
    cmd: ./prepare-import.sh
  args:
    chdir: "{{ emgb_vars.repo_path }}"

- name: Copy docker-compose.override
  ansible.builtin.copy:
    src: docker-compose.override.yml
    dest: "{{ emgb_vars.repo_path }}"

- name: Run yq command to delete nginx ports
  ansible.builtin.command:
    cmd: yq -e -i 'del(.services.nginx.ports)' docker-compose.yml
  args:
    chdir: "{{ emgb_vars.repo_path }}"

- name: Run docker-compose EMGB
  ansible.builtin.command:
    cmd: docker-compose up -d
  args:
    chdir: "{{ emgb_vars.repo_path }}"
